{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\breno\\\\front\\\\homingPigeon\\\\client\\\\src\\\\components\\\\TweetList\\\\index.js\";\nimport React from \"react\";\nimport { Container } from \"../TweetForm/styles\";\nimport Tweet from \"../Tweet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TweetList(props) {\n  //console.log(props) PROPS: The elements our component receive. With it, we can reuse the components with different data.\n  //In this case, the component receives a list of tweets. \n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.tweets.map(tweet => /*#__PURE__*/_jsxDEV(Tweet, {\n        TweetId: tweet._id,\n        owner: tweet.owner,\n        username: tweet.username,\n        content: tweet.content,\n        likes: tweet.likes.length,\n        onLike: props.onLike\n      }, tweet._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n// We've create an unordered list, then go throughout the array and using map, taking the element and its index, for rendering the list item.\n//Key property is REQUIRED (obrigatória). \n_c = TweetList;\nvar _c;\n$RefreshReg$(_c, \"TweetList\");","map":{"version":3,"names":["React","Container","Tweet","jsxDEV","_jsxDEV","TweetList","props","children","tweets","map","tweet","TweetId","_id","owner","username","content","likes","length","onLike","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/breno/front/homingPigeon/client/src/components/TweetList/index.js"],"sourcesContent":["import React from \"react\"\nimport {Container} from \"../TweetForm/styles\"\nimport Tweet from \"../Tweet\"\n\nexport default function TweetList(props) {\n    \n    //console.log(props) PROPS: The elements our component receive. With it, we can reuse the components with different data.\n    //In this case, the component receives a list of tweets. \n    return(\n        <Container>\n            <ul>\n                {props.tweets.map(tweet => (\n                    <Tweet\n                    key={tweet._id}\n\t\t\t\t    TweetId={tweet._id}\n                    owner = {tweet.owner}\n\t\t\t\t    username =\n                    {tweet.username}\n                    content = {tweet.content}\n                    likes = {tweet.likes.length}\n\t\t\t\t    onLike = {props.onLike}\n                    />\n                ))}\n            </ul>\n        </Container>\n    )\n}\n\n// We've create an unordered list, then go throughout the array and using map, taking the element and its index, for rendering the list item.\n//Key property is REQUIRED (obrigatória). "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,QAAO,qBAAqB;AAC7C,OAAOC,KAAK,MAAM,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EAErC;EACA;EACA,oBACIF,OAAA,CAACH,SAAS;IAAAM,QAAA,eACNH,OAAA;MAAAG,QAAA,EACKD,KAAK,CAACE,MAAM,CAACC,GAAG,CAACC,KAAK,iBACnBN,OAAA,CAACF,KAAK;QAElBS,OAAO,EAAED,KAAK,CAACE,GAAI;QACPC,KAAK,EAAIH,KAAK,CAACG,KAAM;QACjCC,QAAQ,EACKJ,KAAK,CAACI,QAAS;QAChBC,OAAO,EAAIL,KAAK,CAACK,OAAQ;QACzBC,KAAK,EAAIN,KAAK,CAACM,KAAK,CAACC,MAAO;QACxCC,MAAM,EAAIZ,KAAK,CAACY;MAAO,GAPNR,KAAK,CAACE,GAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEpB;;AAEA;AACA;AAAAC,EAAA,GAzBwBlB,SAAS;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}